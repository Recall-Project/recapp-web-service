{
    "_id": "_design/xpr",
    "_rev": "64-9a58325e316a9f9a699f093e2576805f",
    "language": "javascript",
    "lists": {
    "surveyresults": "function (doc, req) { provides('csv', function () { var sep = '\\n'; send('completed_survey_id, user_identifier, submitted_at, survey_id, question_ordinal, question_text, question_type, answer_value, answer_type' + sep); while (row = getRow()) { var completedQuestions = row.value.completed_questions; for (var index in completedQuestions) { var completedQuestion = completedQuestions[index]; if (completedQuestion.type == 'ImageExperienceCapture') {send(row.value.identifier + ',' + row.value.user_identifier + ',' + row.value.completed + ',' + row.value.form_identifier + ',' + completedQuestion.ordinal + ',' + completedQuestion.question + ',' + completedQuestion.type + ',' + completedQuestion.image_url + ',' + 'URL' + sep);}else{send(row.value.identifier + ',' + row.value.user_identifier + ',' + row.value.completed + ',' + row.value.form_identifier + ',' + completedQuestion.ordinal + ',' + completedQuestion.question + ',' + completedQuestion.type + ',' + completedQuestion.answer.value + ',' + completedQuestion.answer.type + sep);}}}});}",
        "surveyschemas": "function(doc, req) { provides('csv', function() { var sep = '\\n'; send( 'survey_id, survey_title, survey_type, question_id, question_type, question_ordinal, question_text' + sep); while (row = getRow()) { var survey = row.value; for (var surveyIndex in survey.questions) { var question = survey.questions[surveyIndex]; send(survey.identifier + ',' + survey.title + ',' + survey.type + ',' + question.identifier + ',' + question.type + ',' + question.ordinal + ',' + question.question + sep); } } }); }",
        "completedstimulusresponses": "function(doc, req) { provides('csv', function() { var sep = '\\n'; var orientationResponses = []; var recallResponses = []; while (row = getRow()) { orientationResponses.push([row.value.identifier, row.value.user_identifier, row.value.form_identifier, row.value.completed, row.value.completed_questions, row.value.form_name]); recallResponses.push([row.value.identifier, row.value.user_identifier, row.value.form_identifier, row.value.recallset, row.value.form_name]); } send('completed_survey_id, user_identifier, submitted_at, survey_name, survey_id, question_id, question_ordinal, question_text, question_type, answer_value, answer_type' + sep); for (var index in orientationResponses) { var record = orientationResponses[index]; for (var i in record[4]) { var completedQuestion = record[4][i]; send(record[0] + ',' + record[1] + ',' + completedQuestion.completed + ',' + record[5] + ',' + record[2] + ',' + completedQuestion.identifier + ',' + completedQuestion.ordinal + ',' + completedQuestion.question + ',' + completedQuestion.type + ',' + completedQuestion.answer.value + ',' + completedQuestion.answer.type + sep); } } send(sep); send(sep); send('completed_survey_id, user_identifier, survey_name, survey_id, type, value, ordinal' + sep); for (var index2 in recallResponses) { var record2 = recallResponses[index2]; for (var t in record2[3]) { var completedRecallSet = record2[3][t]; send(record2[0] + ',' + record2[1] + ',' + record2[4] + ',' + record2[2] + ',' + completedRecallSet.type + ',' + completedRecallSet.value + ',' + completedRecallSet.ordinal + sep); } if(record2[3].length < orientationResponses[index2][4].length) { var diff = orientationResponses[index2][4].length - record2[3].length; while(diff > 0) { send(record2[0] + ',' + record2[1] + ',' + record2[4] + ',' + record2[2] + ',' + 'NO RECALL' + ',' + 'NO RECALL' + ',' + 'NO RECALL' + sep); diff--; } } } }); }",
        "stimallocs": "function(doc, req) { provides('csv', function() { var sep = '\\n'; send('study_id, user_identifier, trial_identifier, trial_name, trial_question_identifier, type, stimulus' + sep); while (row = getRow()) { var stim_alloc = row.value.stimulus_alloc; var study_id = row.key[2]; var participant_id = row.key[1]; var trial_id = row.value.trial_identifier; var trial_name = row.value.trial_name; var stimulus_allocs = row.value.stimulus; for (var i3 in stimulus_allocs) { var stimulus = stimulus_allocs[i3]; var trial_q_id = stimulus.stimulus_question_identifier; var type = stimulus.type; var val = stimulus.value; send(study_id + ',' + participant_id + ',' + trial_id + ',' + trial_name + ',' + trial_q_id + ',' + type + ',' + val + ',' + sep); } } }); }",
        "stimallocsbystudy": "function(doc, req) { provides('csv', function() { var sep = '\\n'; send('study_id, user_identifier, trial_identifier, trial_question_identifier, type, stimulus' + sep); while (row = getRow()) { var stim_alloc = row.value.stimulus_alloc; var study_id = row.key[0]; var participant_id = row.key[2]; var trial_id = row.value.trial_identifier; var stimulus_allocs = row.value.stimulus; for (var i3 in stimulus_allocs) { var stimulus = stimulus_allocs[i3]; var trial_q_id = stimulus.stimulus_question_identifier; var type = stimulus.type; var val = stimulus.value; send(study_id + ',' + participant_id + ',' + trial_id + ',' + trial_q_id + ',' + type + ',' + val + ',' + sep); } } }); }"
},
    "views": {
    "completedsurveys": {
        "map": "function(doc) {\n\tif(doc.type =='FilledSurveyForm')\n{\n  emit(doc.form_identifier, doc);\n}\n}"
    },
    "allsurveys": {
        "map": "function(doc) {\n    if (doc.type == 'Project' || doc.type == 'StimulusStudy') {\n        for(var index in doc.surveys)\n        {\n            var survey = doc.surveys[index];\n            emit(survey.identifier, survey);\n        }\n        \n    }\n}"
    },
    "usersurveys": {
        "map": "function(doc) \n{\n\tif(doc.type == 'Project' || doc.type == 'StimulusStudy')\n\t{\n\t\tif(doc.participants)\n\t\t{\n\t\t\tfor (var key in doc.participants) \n\t\t\t{\n  \t\t\t\tif (doc.participants.hasOwnProperty(key)) {\n    \t\t\t\t\t\n\t\t\t\t\temit([doc.participants[key].identifier], doc);\n  \t\t\t\t}\n\t\t\t}\n  \t\t}\n\t\n\t}\n}"
    },
    "coordinatorsurveys": {
        "map": "function(doc) {\n\n \tif(doc.type == 'Project' || doc.type == 'StimulusStudy')\n\t{\n\t\temit(doc.coordinator, doc);\n\t}\n}"
    },
    "completedstimulussurveys": {
        "map": "function(doc) {\n\n  if(doc.type == 'FilledStimulusSurveyForm')\n  {\n  \temit(doc.form_identifier, doc);\n  }\n\n}"
    },
    "stimulussurveys": {
        "map": "function(doc) {\n    if (doc.type == 'StimulusStudy') {\n\n        for (var index in doc.stimulus_alloc) {\n            var user_surveys = doc.stimulus_alloc[index].trials;\n            for (var x in user_surveys) {\n                emit([user_surveys[x].trial_identifier, doc.stimulus_alloc[\n                    index].identifier, doc.identifier], user_surveys[x]);\n            }\n        }\n    }\n}"
    },
    "stimulussurveysbystudy": {
        "map": "function(doc) {\n    if (doc.type == 'StimulusStudy') {\n\n        for (var index in doc.stimulus_alloc) {\n            var user_surveys = doc.stimulus_alloc[index].trials;\n            for (var x in user_surveys) {\n                emit([doc.identifier, user_surveys[x].trial_identifier, doc.stimulus_alloc[\n                    index].identifier], user_surveys[x]);\n            }\n        }\n    }\n}"
    }
}
}